Q.How did viewing a diff between two versions of a file help you see the bug that
was introduced?

A.It saved me from going through the long ass file and saved a lot of time and monotonicity.

Q.How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

A.Could try different improvisations without the fear of code going kaput since I could restore the previous version anytime.


Q.What do you think are the pros and cons of manually choosing when to create a
  commit, like you do in Git, vs having versions automatically saved, like Google
  docs does?

A. Multiple not needed versions are prevented from being created and only the versions we need exist reducing time taken to traverse through all versions.



Q.Why do you think some version control systems, like Git, allow saving multiple
  files in one commit, while others, like Google Docs, treat each file separately?

A. Commit is manual for git hence the user can decide and consciously choose to make 
   multiple copies of said file and try different type of methods on each copy whereas 
   in Google docs saving is automatic and since it is being operated by multiple users 
   every version created needs to be preserved in the event of something going wrong.



Q.How can you use the commands git log and git diff to view the history of files?

A. Using command prompt on said two files.


Q.How might using version control make you more confident to make changes that
could break something?

A. It allows me to back step to a version where everything works just fine so I'll prehaps be more inventive with the changes I sought to make or that could break something.

Now that you have your workspace set up, what do you want to try using Git for?
Learning how to use Git and GitHub


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Manual vs Automatic, Allows user to try different things on Git 



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Bugs could easily be found. The idea to break things up to bring them back again gets more freedom.


How can you use the commands git log and git diff to view the history of files?


How might using version control make you more confident to make changes that could break something?


Now that you have your workspace set up, what do you want to try using Git for?
Programming. WebD. 
